apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkekNDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdGMyVnkKZG1WeUxXTmhRREUzTlRRd05ESXhNRGN3SGhjTk1qVXdPREF4TURrMU5UQTNXaGNOTXpVd056TXdNRGsxTlRBMwpXakFqTVNFd0h3WURWUVFEREJock0zTXRjMlZ5ZG1WeUxXTmhRREUzTlRRd05ESXhNRGN3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFRcUJJdER2RldLQllZeitoSDVtRDR3NHd0OVF5bi9DVSt1a2tYSXdSOHMKT2dyV0ZCMEhsY3FkUitoNzlzWmJJM3RYNTdBblk2WHpVa0xMTm9NWlF5MkRvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVW5hUWNtdmUxTDkzVGtFOVNjQ0VDCjFFTlNmUnd3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnWUt1MXZjbXhFeEc0T3FYM0lPeFhmdC9lcTE5d3BLMW0KeUpJcm1JNkh3UHNDSVFEbUg3R0NyZmNFL2QwdFZVZWJsN21xbUxrUEJOT0hZK0pyclhhcExSUXJ0UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://51.21.20.125:6443
  name: default
contexts:
- context:
    cluster: default
    user: default
  name: default
current-context: default
kind: Config
preferences: {}
users:
- name: default
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJrRENDQVRlZ0F3SUJBZ0lJVkM0NVNWWi9WT1F3Q2dZSUtvWkl6ajBFQXdJd0l6RWhNQjhHQTFVRUF3d1kKYXpOekxXTnNhV1Z1ZEMxallVQXhOelUwTURReU1UQTNNQjRYRFRJMU1EZ3dNVEE1TlRVd04xb1hEVEkyTURndwpNVEE1TlRVd04xb3dNREVYTUJVR0ExVUVDaE1PYzNsemRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41CmMzUmxiVHBoWkcxcGJqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJEOFE5Ti85SXFhalJ6ZEMKL1N0dkU0MGsxWVV4T2ZJVFE0SEtyY0M5bm9EZ3FqZkVGN0dpTTRRemFJcXJXYkxDWEwwQURyVXFaTUdva05CTApzV0ZYQ2IyalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBakFmCkJnTlZIU01FR0RBV2dCU2kzZWdTZTFmTzVFMEtLYVFRNWtURWdDWlhnVEFLQmdncWhrak9QUVFEQWdOSEFEQkUKQWlCUklEUUc1UXFyWWlqeWpYMTNCS2RLbC9TWmVubnU5RisvMTBnZ1lRZEJ5UUlnY2crY3hBcXNRV0tGR3dlOQpMbllhZmp2STdUcjhYZm9udjJPSWtCN2VKNEU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkekNDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdFkyeHAKWlc1MExXTmhRREUzTlRRd05ESXhNRGN3SGhjTk1qVXdPREF4TURrMU5UQTNXaGNOTXpVd056TXdNRGsxTlRBMwpXakFqTVNFd0h3WURWUVFEREJock0zTXRZMnhwWlc1MExXTmhRREUzTlRRd05ESXhNRGN3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFSNU9ySkZ5c1I1WDhtaW9QTXVtRTFzTllucHdJdEFxOEJKUkE5WVVGb3QKMmU5L2tIcE8wOUgxQkVXeHkzcStjR2cwQUpFTkNmeWlORG1qL2RsaFMyUC9vMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVW90M29FbnRYenVSTkNpbWtFT1pFCnhJQW1WNEV3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnSENjR3RuODVHWndCYVZlc2M4MmVxQklXYUVkYUJBa0EKMGRkcllUckswMFFDSVFESFYvalNnYldhcnN3WFRSWU1XZU5JMDBUWEU2MzZoUkcwb3ZtN2VxN0E0QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    client-key-data: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSURBQW1sVG1HVzlpcnBLSnZLUkFxYjlJcUhUQXZqZEQvaHg1ZzIwSE50dm9vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUHhEMDMvMGlwcU5ITjBMOUsyOFRqU1RWaFRFNThoTkRnY3F0d0wyZWdPQ3FOOFFYc2FJegpoRE5vaXF0WnNzSmN2UUFPdFNwa3dhaVEwRXV4WVZjSnZRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=